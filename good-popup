<div>
  <canvas id="myChart" style="display:none"></canvas>
</div>

<h1>Popup/Modal Windows without JavaScript</h1>
<div id="wrapper">
  <p><a class="button" href="#popup1">Click Me</a></p>
</div>

<button id="myB" onClick="showCanvas()">Click for Timeline</button>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<div id="popup1" class="overlay">
	<div class="popup">
		<h2>Info box</h2>
		<a class="close" href="#">&times;</a>
		<div class="content">
			<p>This is done totally without JavaScript. Just HTML and CSS.</p>
		</div>
	</div>
</div>




js: 



var domo = window.domo;
var datasets = window.datasets;

var showCanvas = function(e) {
  document.getElementsByTagName('canvas')[0].style.display = 'block';
  document.getElementsByTagName('button')[0].style.display = 'none';
  
  debugger;
   
}  

domo
  .get(`data/v1/${datasets[0]}?fields=department,revenue,date_ymd`)
  .then(function(data) {

    var data1 = data.filter(d => d.department == 'Mens Apparel' || d.department == 'Mens Shoes');

    var data2 = data1.map(obj => ({ ...obj, week: new Date(obj['date_ymd']).getWeek() }));

    var apparel = data2.filter(d => d.department == 'Mens Apparel');
    var shoes = data2.filter(d => d.department == 'Mens Shoes');
           
    const sumByKey = (arr, key, value, extra) => {
      const map = new Map();
      for(const obj of arr) {
        const currSum = map.get(obj[key]) || 0;
        map.set(obj[key], currSum + obj[value]);
      }
      const res = Array.from(map, ([k, v]) => ({[key]: k, [value]: v, 'department': extra}));
      return res;
    }

    const apparel_data = sumByKey(apparel, 'week', 'revenue', 'Mens Apparel');
    const shoe_data = sumByKey(shoes, 'week', 'revenue', 'Mens Shoes');
    var data3 = apparel_data.concat(shoe_data);
    var sum = 0;

    var ctx = document.getElementById("myChart").getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
           // labels: ["Tokyo",	"Mumbai",	"Mexico City",	"Shanghai",	"Sao Paulo",	"New York",	"Karachi","Buenos Aires",	"Delhi","Moscow"],
          labels: apparel_data.map(ad => `Week ${ad.week}`), 
          datasets: [{
                label: 'Video Views Goal', // Name the series
                data: apparel_data.map(a => a.revenue).map(elem => sum = (sum || 0) + elem),
                fill: true,
                borderColor: '#2196f3', // Add custom color border (Line)
                backgroundColor: '#2196f3', // Add custom color background (Points and Fill)
                borderWidth: 1 // Specify bar border width
            },
             {
                label: 'Actual', // Name the series
                data: shoe_data.map(a => a.revenue).map(elem => sum = (sum || 0) + elem),
                fill: false,
                borderColor: '#4CAF50', // Add custom color border (Line)
                backgroundColor: '#4CAF50', // Add custom color background (Points and Fill)
                borderWidth: 1 // Specify bar border width
            }]
        },
        options: {
          responsive: true, // Instruct chart js to respond nicely.
          maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height 
        }
    });

});  

Date.prototype.getWeek = function() {
  var onejan = new Date(this.getFullYear(),0,1);
  var today = new Date(this.getFullYear(),this.getMonth(),this.getDate());
  var dayOfYear = ((today - onejan + 86400000)/86400000);
  return Math.ceil(dayOfYear/7)
};




css


#myDiv {
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgb(131,58,180);
	background: linear-gradient(90deg, rgba(121,64,161,1) 0%, rgba(228,88,80,1) 50%, rgba(251,141,52,1) 100%);
  height: calc(100vh);
}

h1 {
  color: white;
}


#wrapper {
	width: 100px;
	margin: 0 auto;
	background: #fff;
	padding: 20px;
	border: 10px solid #aaa;
	border-radius: 15px;
	background-clip: padding-box;
	text-align: center;
}

.button {
	font-family: Helvetica, Arial, sans-serif;
	font-size: 13px;
	padding: 5px 10px;
	border: 1px solid #aaa;
	background-color: #eee;
	background-image: linear-gradient(top, #fff, #f0f0f0);
	border-radius: 2px;
	box-shadow: 0 1px 3px rgba(0,0,0,0.15);
	color: #666;
	text-decoration: none;
	text-shadow: 0 1px 0 #fff;
	cursor: pointer;
	transition: all 0.2s ease-out;
  &:hover {
    border-color: #999;
    box-shadow: 0 1px 3px rgba(0,0,0,0.25);
  }
  &:active {
    box-shadow: 0 1px 3px rgba(0,0,0,0.25) inset;
  }
}

.overlay {
	position: absolute;
	top: 0;
	bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0,0,0,0.5);
	transition: opacity 200ms;
  visibility: hidden;
	opacity: 0;
	&.light {
    background: rgba(255,255,255,0.5);
  }
  .cancel {
    position: absolute;
    width: 100%;
    height: 100%;
    cursor: default;
  }
  &:target {
    visibility: visible;
    opacity: 1;
  }
}

.popup {
	margin: 75px auto;
	padding: 20px;
	background: #fff;
	border: 1px solid #666;
	width: 800px;
	box-shadow: 0 0 50px rgba(0,0,0,0.5);
	position: relative;
  .light & {
    border-color: #aaa;
    box-shadow: 0 2px 10px rgba(0,0,0,0.25);
  }
  h2 {
    margin-top: 0;
    color: #666;
    font-family: "Trebuchet MS", Tahoma, Arial, sans-serif;
  }
  .close {
    position: absolute;
    width: 20px;
    height: 20px;
    top: 20px;
    right: 20px;
    opacity: 0.8;
    transition: all 200ms;
    font-size: 24px;
    font-weight: bold;
    text-decoration: none;
    color: #666;
    &:hover {
      opacity: 1;
    }
  }
  .content {
    max-height: 400px;
    overflow: auto;
  }
  p {
    margin: 0 0 1em;
    &:last-child {
      margin: 0;
    }
  }
}
